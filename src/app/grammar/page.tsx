
'use client';

import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { Switch } from '@/components/ui/switch';
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';
import { Label } from '@/components/ui/label';
import { Progress } from '@/components/ui/progress';
import { ArrowLeft, CheckCircle, Info, XCircle } from 'lucide-react';
import Link from 'next/link';
import InteractiveText from '@/components/interactive-text';
import { cn } from '@/lib/utils';


const partsOfSpeech = [
    { name: '–°—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ', example: 'Áå´ („Å≠„Åì)', translation: '–ö–æ—à–∫–∞', role: '–û–±–æ–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–µ–¥–º–µ—Ç –∏–ª–∏ —è–≤–ª–µ–Ω–∏–µ.' },
    { name: '–ì–ª–∞–≥–æ–ª—ã', example: 'È£ü„Åπ„Çã („Åü„Åπ„Çã)', translation: '–ï—Å—Ç—å, –∫—É—à–∞—Ç—å', role: '–û–±–æ–∑–Ω–∞—á–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.' },
    { name: '–ü—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ', example: 'Áæé„Åó„ÅÑ („ÅÜ„Å§„Åè„Åó„ÅÑ)', translation: '–ö—Ä–∞—Å–∏–≤—ã–π', role: '–û–±–æ–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–∏–∑–Ω–∞–∫ –ø—Ä–µ–¥–º–µ—Ç–∞.' },
    { name: '–ú–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è', example: 'ÁßÅ („Çè„Åü„Åó)', translation: '–Ø', role: '–£–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç, –Ω–æ –Ω–µ –Ω–∞–∑—ã–≤–∞–µ—Ç –µ–≥–æ.' },
];

const pronouns = [
    { pronoun: 'ÁßÅ', romaji: 'watashi', politeness: '–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ-–≤–µ–∂–ª–∏–≤–æ–µ', translation: '–Ø', role: '1-–µ –ª–∏—Ü–æ, –µ–¥.—á.' },
    { pronoun: '„ÅÇ„Å™„Åü', romaji: 'anata', politeness: '–í–µ–∂–ª–∏–≤–æ–µ, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º –ø—Ä—è–º—ã–º', translation: '–¢—ã, –≤—ã', role: '2-–µ –ª–∏—Ü–æ, –µ–¥.—á.' },
    { pronoun: '„ÅÇ„ÅÆ‰∫∫', romaji: 'ano hito', politeness: '–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ', translation: '–û–Ω, –æ–Ω–∞, —Ç–æ –ª–∏—Ü–æ', role: '3-–µ –ª–∏—Ü–æ, –µ–¥.—á.' },
    { pronoun: '„ÅÇ„ÅÆÊñπ', romaji: 'ano kata', politeness: '–û—á–µ–Ω—å –≤–µ–∂–ª–∏–≤–æ–µ', translation: '–û–Ω, –æ–Ω–∞ (—É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ)', role: '3-–µ –ª–∏—Ü–æ, –µ–¥.—á.' },
]

const cases = [
    { case: '–û—Å–Ω–æ–≤–Ω–æ–π', suffix: '–ù–µ—Ç', function: '–û–±—Ä–∞—â–µ–Ω–∏–µ, –∏–º–µ–Ω–Ω–∞—è —á–∞—Å—Ç—å —Å–∫–∞–∑—É–µ–º–æ–≥–æ, –ø–æ–¥–ª–µ–∂–∞—â–µ–µ —Å „ÅØ.' },
    { case: '–ò–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π', suffix: '„Åå', function: '–ü–æ–¥–ª–µ–∂–∞—â–µ–µ, —á–∞—Å—Ç–æ —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –Ω–µ–º.' },
    { case: '–í–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π', suffix: '„Çí', function: '–ü—Ä—è–º–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ (–æ–±—ä–µ–∫—Ç –¥–µ–π—Å—Ç–≤–∏—è).' },
    // ... more cases can be added here
]

export default function GrammarPage() {
    const [useJaArimasen, setUseJaArimasen] = useState(false);
    const [progress, setProgress] = useState(10);
    const [answers, setAnswers] = useState<Record<string, string | null>>({});
    const [results, setResults] = useState<Record<string, boolean | null>>({});

    const exercises = {
        q1: { question: "–ö –∫–∞–∫–æ–π —á–∞—Å—Ç–∏ —Ä–µ—á–∏ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è —Å–ª–æ–≤–æ „Çè„Åü„Åó?", options: ['—Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ', '–º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ', '—á–∞—Å—Ç–∏—Ü–∞'], correct: '–º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ' },
        q2: { question: '"–û–Ω ‚Äî —Å—Ç—É–¥–µ–Ω—Ç."', options: ['„ÅÇ„ÅÆ„Å≤„Å®', '„Çè„Åü„Åó', '„ÅÇ„Å™„Åü'], correct: '„ÅÇ„ÅÆ„Å≤„Å®' },
        q3: { question: '„ÇÑ„Åæ„Å†Ôºà„ÄÄÔºâ„Åå„Åè„Åõ„ÅÑ„Åß„Åô„ÄÇ', options: ['„Åï„Çì', '„ÅØ', '„Çí'], correct: '„Åï„Çì' },
    };

    const handleAnswer = (question: string, answer: string) => {
        setAnswers(prev => ({ ...prev, [question]: answer }));
    };
    
    const checkAnswer = (question: string) => {
        const isCorrect = answers[question] === (exercises as any)[question].correct;
        setResults(prev => ({ ...prev, [question]: isCorrect }));
    }

  return (
    <div className="flex flex-col items-center justify-start min-h-screen bg-background p-4 sm:p-8 pt-16 sm:pt-24 animate-fade-in">
        <div className="w-full max-w-4xl">
            <Button asChild variant="ghost" className="mb-4">
                <Link href="/">
                    <ArrowLeft className="mr-2 h-4 w-4" />
                    –ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                </Link>
            </Button>
            <Card className="w-full mb-8">
                <CardHeader>
                    <p className="text-sm text-primary font-semibold">–£—Ä–æ–∫ 1 ‚Äî –ì—Ä–∞–º–º–∞—Ç–∏–∫–∞</p>
                    <CardTitle className="text-2xl md:text-3xl">–¢–µ–º–∞ 1: –ß–∞—Å—Ç–∏ —Ä–µ—á–∏, –ø–∞–¥–µ–∂–∏, —Å–≤—è–∑–∫–∏, –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è</CardTitle>
                    <CardDescription>–ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —Ç–µ–º–µ:</CardDescription>
                    <Progress value={progress} className="mt-2" />
                </CardHeader>
            </Card>

            <h2 className="text-3xl font-bold text-foreground mb-6 text-center">üß† –¢–µ–æ—Ä–∏—è</h2>
            <Accordion type="single" collapsible className="w-full max-w-4xl mb-12">
            <AccordionItem value="item-1">
                <AccordionTrigger className="text-xl font-semibold">¬ß1. –ß–∞—Å—Ç–∏ —Ä–µ—á–∏ –≤ —è–ø–æ–Ω—Å–∫–æ–º</AccordionTrigger>
                <AccordionContent className="text-lg text-foreground/90 space-y-4 px-2">
                    <p>–í—Å–µ —Å–ª–æ–≤–∞ –≤ —è–ø–æ–Ω—Å–∫–æ–º —è–∑—ã–∫–µ –¥–µ–ª—è—Ç—Å—è –Ω–∞ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å–Ω—ã–µ (–Ω–µ—Å—É—â–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–º—ã—Å–ª) –∏ —Å–ª—É–∂–µ–±–Ω—ã–µ (–ø–æ–º–æ–≥–∞—é—â–∏–µ —Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è).</p>
                    <div className="flex flex-wrap gap-2">
                        {partsOfSpeech.map(part => (
                            <Popover key={part.name}>
                                <PopoverTrigger asChild>
                                    <Button variant="outline" className="flex items-center gap-2">
                                        {part.name} <Info className="w-4 h-4 text-muted-foreground"/>
                                    </Button>
                                </PopoverTrigger>
                                <PopoverContent className="w-80">
                                    <CardHeader className="p-2">
                                        <CardTitle>{part.name}</CardTitle>
                                    </CardHeader>
                                    <CardContent className="p-2">
                                        <p><span className="font-semibold">–ü—Ä–∏–º–µ—Ä:</span> {part.example}</p>
                                        <p><span className="font-semibold">–ü–µ—Ä–µ–≤–æ–¥:</span> {part.translation}</p>
                                        <p className="mt-2 text-sm text-muted-foreground">{part.role}</p>
                                    </CardContent>
                                </PopoverContent>
                            </Popover>
                        ))}
                    </div>
                </AccordionContent>
            </AccordionItem>
            <AccordionItem value="item-2">
                <AccordionTrigger className="text-xl font-semibold">¬ß2. –ò–º—è —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ (ÂêçË©û)</AccordionTrigger>
                <AccordionContent className="text-lg text-foreground/90 space-y-4 px-2">
                    <p>–£ —è–ø–æ–Ω—Å–∫–∏—Ö —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –Ω–µ—Ç —Ä–æ–¥–∞ (–º—É–∂—Å–∫–æ–≥–æ/–∂–µ–Ω—Å–∫–æ–≥–æ) –∏, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –Ω–µ—Ç —Ñ–æ—Ä–º—ã –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞. –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Å—É—Ñ—Ñ–∏–∫—Å–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, -„Åü„Å° –¥–ª—è –ª—é–¥–µ–π).</p>
                    <Table>
                        <TableHeader>
                            <TableRow>
                                <TableHead>–ü–∞–¥–µ–∂</TableHead>
                                <TableHead>–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è</TableHead>
                            </TableRow>
                        </TableHeader>
                        <TableBody>
                            {cases.map(c => (
                            <TableRow key={c.case}>
                                <TableCell className="font-medium">{c.case}</TableCell>
                                <TableCell>{c.function}</TableCell>
                            </TableRow>
                            ))}
                        </TableBody>
                    </Table>
                </AccordionContent>
            </AccordionItem>
            <AccordionItem value="item-3">
                <AccordionTrigger className="text-xl font-semibold">¬ß3. –û—Å–Ω–æ–≤–Ω–æ–π –ø–∞–¥–µ–∂</AccordionTrigger>
                <AccordionContent className="text-lg text-foreground/90 space-y-4 px-2">
                    <p>–≠—Ç–æ –±–∞–∑–æ–≤–∞—è —Ñ–æ—Ä–º–∞ —Å–ª–æ–≤–∞ –±–µ–∑ –ø–∞–¥–µ–∂–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª—É—á–∞—è—Ö:</p>
                    <ul className="list-disc list-inside space-y-2">
                        <li>–ü—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏: <InteractiveText text="Â±±Áî∞„Åï„ÇìÔºÅ" /></li>
                        <li>–ö–∞–∫ –∏–º–µ–Ω–Ω–∞—è —á–∞—Å—Ç—å —Å–∫–∞–∑—É–µ–º–æ–≥–æ: <InteractiveText text="Áî∞‰∏≠„ÅØÂ≠¶Áîü„Åß„Åô" /></li>
                    </ul>
                </AccordionContent>
            </AccordionItem>
            <AccordionItem value="item-4">
                <AccordionTrigger className="text-xl font-semibold">¬ß4. –õ–∏—á–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è (‰ª£ÂêçË©û)</AccordionTrigger>
                <AccordionContent className="text-lg text-foreground/90 space-y-4 px-2">
                    <p>–í—ã–±–æ—Ä –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è —Å–∏–ª—å–Ω–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —É—Ä–æ–≤–Ω—è –≤–µ–∂–ª–∏–≤–æ—Å—Ç–∏ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.</p>
                     <Table>
                        <TableHeader>
                            <TableRow>
                                <TableHead>–ú–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ</TableHead>
                                <TableHead>–í–µ–∂–ª–∏–≤–æ—Å—Ç—å</TableHead>
                                <TableHead>–ü–µ—Ä–µ–≤–æ–¥</TableHead>
                            </TableRow>
                        </TableHeader>
                        <TableBody>
                            {pronouns.map(p => (
                            <TableRow key={p.pronoun}>
                                <TableCell className="font-medium font-japanese text-xl">{p.pronoun}</TableCell>
                                <TableCell>{p.politeness}</TableCell>
                                <TableCell>{p.translation}</TableCell>
                            </TableRow>
                            ))}
                        </TableBody>
                    </Table>
                </AccordionContent>
            </AccordionItem>
            <AccordionItem value="item-5">
                <AccordionTrigger className="text-xl font-semibold">¬ß6. –§–æ—Ä–º—ã —Å–≤—è–∑–∫–∏ „Åß„Åô</AccordionTrigger>
                <AccordionContent className="text-lg text-foreground/90 space-y-4 px-2">
                    <p>–°–≤—è–∑–∫–∞ „Åß„Åô –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –≤–µ–∂–ª–∏–≤—ã–º. –£ –Ω–µ–µ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–æ—Ä–º.</p>
                    <div className="flex items-center space-x-4 p-4 rounded-lg bg-card/70">
                        <span className="font-bold">–§–æ—Ä–º–∞:</span>
                        <Label htmlFor="tense-switch">–£—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω–∞—è</Label>
                        <Switch id="tense-switch" checked={!useJaArimasen} onCheckedChange={(checked) => setUseJaArimasen(!checked)} />
                        <Label htmlFor="tense-switch">–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è</Label>
                    </div>
                    <div className="p-4 bg-muted rounded-lg text-center">
                        <p className="text-2xl font-japanese">
                        {useJaArimasen ? '„Äú„Åß„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì / „Äú„Åò„ÇÉ„ÅÇ„Çä„Åæ„Åõ„Çì' : '„Äú„Åß„Åô'}
                        </p>
                        <p className="text-sm text-muted-foreground mt-2">
                        {useJaArimasen ? '–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞ (–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è / —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–∞—è)' : '–ù–∞—Å—Ç–æ—è—â–µ–µ-–±—É–¥—É—â–µ–µ –≤—Ä–µ–º—è, —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ'}
                        </p>
                    </div>
                </AccordionContent>
            </AccordionItem>
             <AccordionItem value="item-7">
                <AccordionTrigger className="text-xl font-semibold">¬ß7. –ü—Ä–æ—Å—Ç–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</AccordionTrigger>
                <AccordionContent className="text-lg text-foreground/90 space-y-4 px-2">
                    <p>–ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ –≤–µ–∂–ª–∏–≤–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å –∏–º–µ–Ω–Ω—ã–º —Å–∫–∞–∑—É–µ–º—ã–º –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫:</p>
                    <Card className="bg-card/70">
                        <CardContent className="p-6">
                            <p className="text-center text-muted-foreground text-sm">–ü–æ–¥–ª–µ–∂–∞—â–µ–µ + –ß–∞—Å—Ç–∏—Ü–∞ „ÅØ + –°–∫–∞–∑—É–µ–º–æ–µ + –°–≤—è–∑–∫–∞ „Åß„Åô</p>
                            <div className="mt-4">
                               <InteractiveText text="Áî∞‰∏≠„Åï„Çì„ÅØÂ≠¶Áîü„Åß„Åô" />
                            </div>
                        </CardContent>
                    </Card>
                </AccordionContent>
            </AccordionItem>
            </Accordion>

            <h2 className="text-3xl font-bold text-foreground mb-8 text-center">üìù –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ</h2>
            <div className="w-full max-w-4xl space-y-8">
                {/* Exercise 1 */}
                <Card>
                    <CardHeader>
                        <CardTitle>–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 1. –û–ø—Ä–µ–¥–µ–ª–∏ —á–∞—Å—Ç—å —Ä–µ—á–∏</CardTitle>
                        <CardDescription>{exercises.q1.question}</CardDescription>
                    </CardHeader>
                    <CardContent>
                        <RadioGroup value={answers.q1} onValueChange={(val) => handleAnswer('q1', val)} className="flex flex-col sm:flex-row gap-4">
                             {exercises.q1.options.map(option => (
                                <div key={option} className="flex items-center space-x-2">
                                    <RadioGroupItem value={option} id={`q1-${option}`} />
                                    <Label htmlFor={`q1-${option}`}>{option}</Label>
                                </div>
                            ))}
                        </RadioGroup>
                        <div className="mt-4 flex items-center gap-4">
                             <Button onClick={() => checkAnswer('q1')} disabled={!answers.q1}>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</Button>
                             {results.q1 === true && <span className="flex items-center gap-2 text-green-600"><CheckCircle/> –í–µ—Ä–Ω–æ!</span>}
                             {results.q1 === false && <span className="flex items-center gap-2 text-destructive"><XCircle/> –û—à–∏–±–∫–∞. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ.</span>}
                        </div>
                    </CardContent>
                </Card>

                 {/* Exercise 2 */}
                 <Card>
                    <CardHeader>
                        <CardTitle>–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 2. –í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ</CardTitle>
                        <CardDescription>{exercises.q2.question}</CardDescription>
                    </CardHeader>
                    <CardContent>
                        <RadioGroup value={answers.q2} onValueChange={(val) => handleAnswer('q2', val)} className="flex flex-col sm:flex-row gap-4">
                             {exercises.q2.options.map(option => (
                                <div key={option} className="flex items-center space-x-2">
                                    <RadioGroupItem value={option} id={`q2-${option}`} />
                                    <Label htmlFor={`q2-${option}`} className="font-japanese text-lg">{option}</Label>
                                </div>
                            ))}
                        </RadioGroup>
                        <div className="mt-4 flex items-center gap-4">
                             <Button onClick={() => checkAnswer('q2')} disabled={!answers.q2}>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</Button>
                             {results.q2 === true && <span className="flex items-center gap-2 text-green-600"><CheckCircle/> –û—Ç–ª–∏—á–Ω–æ!</span>}
                             {results.q2 === false && <span className="flex items-center gap-2 text-destructive"><XCircle/> –ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: „ÅÇ„ÅÆ„Å≤„Å®.</span>}
                        </div>
                    </CardContent>
                </Card>

                 {/* Exercise 3 */}
                <Card>
                    <CardHeader>
                        <CardTitle>–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 3. –ó–∞–ø–æ–ª–Ω–∏ –ø—Ä–æ–ø—É—Å–∫–∏</CardTitle>
                        <CardDescription className="font-japanese text-xl">{exercises.q3.question}</CardDescription>
                    </CardHeader>
                    <CardContent>
                        <div className="flex flex-wrap gap-2">
                            {exercises.q3.options.map(option => (
                                <Button 
                                    key={option}
                                    variant={answers.q3 === option ? 'default' : 'outline'}
                                    onClick={() => handleAnswer('q3', option)}
                                    className={cn("font-japanese text-lg",
                                        results.q3 === true && answers.q3 === option && 'bg-green-500 hover:bg-green-600',
                                        results.q3 === false && answers.q3 === option && 'bg-destructive hover:bg-destructive/90',
                                    )}
                                >
                                    {option}
                                </Button>
                            ))}
                        </div>
                         <div className="mt-4 flex items-center gap-4">
                             <Button onClick={() => checkAnswer('q3')} disabled={!answers.q3}>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</Button>
                             {results.q3 === true && <span className="flex items-center gap-2 text-green-600"><CheckCircle/> –ü—Ä–∞–≤–∏–ª—å–Ω–æ! „Åï„Çì - —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π —Å—É—Ñ—Ñ–∏–∫—Å.</span>}
                             {results.q3 === false && <span className="flex items-center gap-2 text-destructive"><XCircle/> –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.</span>}
                        </div>
                    </CardContent>
                </Card>
            </div>
             <div className="mt-12 text-center flex flex-col sm:flex-row justify-center items-center gap-4">
                <Button size="lg" variant="outline">–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç–µ–æ—Ä–∏—é</Button>
                <Button size="lg" asChild className="btn-gradient">
                    <Link href="/vocabulary">–°–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫ ‚Üí –õ–µ–∫—Å–∏–∫–∞</Link>
                </Button>
             </div>
        </div>
    </div>
  );
}
